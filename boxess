-- // SETTINGS
local settings = {
    defaultcolor = Color3.fromRGB(255, 0, 0),
    teamcheck = false,
    teamcolor = true
}

-- // SERVICES
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera

-- // GLOBALS
getgenv().ESP_RUNNING = true
getgenv().ESP_CACHE = getgenv().ESP_CACHE or {}
getgenv().ESP_CONNECTION = getgenv().ESP_CONNECTION

-- // HELPERS
local newVector2, newColor3, newDrawing = Vector2.new, Color3.new, Drawing.new
local tan, rad = math.tan, math.rad
local function round(...) local a = {}; for i, v in next, table.pack(...) do a[i] = math.round(v) end; return unpack(a) end
local function wtvp(...) local a, b = Camera:WorldToViewportPoint(...); return newVector2(a.X, a.Y), b, a.Z end

-- // CREATE ESP
local function createEsp(player)
    if getgenv().ESP_CACHE[player] or player == LocalPlayer then return end
    local drawings = {}

    drawings.box = newDrawing("Square")
    drawings.box.Thickness = 0.4
    drawings.box.Filled = false
    drawings.box.Color = settings.defaultcolor
    drawings.box.Visible = false
    drawings.box.ZIndex = 2

    drawings.outline = newDrawing("Square")
    drawings.outline.Thickness = 1
    drawings.outline.Filled = false
    drawings.outline.Color = Color3.new(0, 0, 0)
    drawings.outline.Visible = false
    drawings.outline.ZIndex = 1

    getgenv().ESP_CACHE[player] = drawings
end

-- // REMOVE ONE PLAYER ESP
local function removeEsp(player)
    local drawings = getgenv().ESP_CACHE[player]
    if drawings then
        for _, d in pairs(drawings) do
            d.Visible = false
            d:Remove()
        end
        getgenv().ESP_CACHE[player] = nil
    end
end

-- // DESTROY ALL
getgenv().DestroyAllEsp = function()
    getgenv().ESP_RUNNING = false

    if getgenv().ESP_CONNECTION then
        getgenv().ESP_CONNECTION:Disconnect()
        getgenv().ESP_CONNECTION = nil
    end

    for player, drawings in pairs(getgenv().ESP_CACHE) do
        for _, d in pairs(drawings) do
            pcall(function() d.Visible = false d:Remove() end)
        end
        getgenv().ESP_CACHE[player] = nil
    end

    print("[ESP] Fully cleaned up.")
end

-- // UPDATE ESP
local function updateEsp(player, esp)
    local char = player.Character
    if not char or not char:GetModelCFrame() then
        esp.box.Visible = false
        esp.outline.Visible = false
        return
    end

    local cf = char:GetModelCFrame()
    local pos, visible, depth = wtvp(cf.Position)
    if not visible then
        esp.box.Visible = false
        esp.outline.Visible = false
        return
    end

    local scale = 1 / (depth * tan(rad(Camera.FieldOfView / 2)) * 2) * 1000
    local width, height = round(4 * scale, 5 * scale)
    local x, y = round(pos.X, pos.Y)

    esp.box.Size = newVector2(width, height)
    esp.box.Position = newVector2(x - width / 2, y - height / 2)
    esp.box.Color = settings.teamcolor and player.TeamColor.Color or settings.defaultcolor
    esp.box.Visible = true

    esp.outline.Size = esp.box.Size
    esp.outline.Position = esp.box.Position
    esp.outline.Visible = true
end

-- // INIT
for _, plr in pairs(Players:GetPlayers()) do
    if plr ~= LocalPlayer then
        createEsp(plr)
    end
end

Players.PlayerAdded:Connect(function(p)
    if getgenv().ESP_RUNNING then createEsp(p) end
end)

Players.PlayerRemoving:Connect(function(p)
    removeEsp(p)
end)

-- // MAIN LOOP
getgenv().ESP_CONNECTION = RunService.RenderStepped:Connect(function()
    if not getgenv().ESP_RUNNING then return end

    for player, drawings in pairs(getgenv().ESP_CACHE) do
        if settings.teamcheck and player.Team == LocalPlayer.Team then
            continue
        end
        if drawings and player ~= LocalPlayer then
            updateEsp(player, drawings)
        end
    end
end)
