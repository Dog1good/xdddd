-- Crosshair Module - Simple Toggle Only
print("Crosshair module loading...")

-- Test if LeftGroupBox exists
if not LeftGroupBox then
    warn("LeftGroupBox is nil! Create it before loading this module.")
    return
end

print("LeftGroupBox found:", LeftGroupBox)

-- Crosshair Variables
local CrosshairEnabled = false
local screenGui = nil
local crosshair = nil
local rotation = 0
local renderConnection = nil

-- Crosshair Creation Function
local function CreateCrosshair()
    print("Creating crosshair...")
    local player = game.Players.LocalPlayer
    local mouse = player:GetMouse()
    
    if screenGui then
        screenGui:Destroy()
    end
    
    screenGui = Instance.new("ScreenGui")
    screenGui.Name = "CrosshairGui"
    screenGui.ResetOnSpawn = false
    screenGui.Parent = player.PlayerGui
    
    crosshair = Instance.new("Frame")
    crosshair.Name = "Crosshair"
    crosshair.Size = UDim2.new(0, 40, 0, 40)
    crosshair.Position = UDim2.new(0, mouse.X, 0, mouse.Y)
    crosshair.AnchorPoint = Vector2.new(0.5, 0.5)
    crosshair.BackgroundTransparency = 1
    crosshair.Parent = screenGui
    
    -- Vertical bar
    local vertical = Instance.new("Frame")
    vertical.Name = "Vertical"
    vertical.Size = UDim2.new(0, 4, 1, 0)
    vertical.Position = UDim2.new(0.5, 0, 0, 0)
    vertical.AnchorPoint = Vector2.new(0.5, 0)
    vertical.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    vertical.BorderSizePixel = 0
    vertical.Parent = crosshair
    
    local outline1 = Instance.new("UIStroke")
    outline1.Color = Color3.fromRGB(0, 0, 0)
    outline1.Thickness = 1
    outline1.Parent = vertical
    
    -- Horizontal bar
    local horizontal = Instance.new("Frame")
    horizontal.Name = "Horizontal"
    horizontal.Size = UDim2.new(1, 0, 0, 4)
    horizontal.Position = UDim2.new(0, 0, 0.5, 0)
    horizontal.AnchorPoint = Vector2.new(0, 0.5)
    horizontal.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    horizontal.BorderSizePixel = 0
    horizontal.Parent = crosshair
    
    local outline2 = Instance.new("UIStroke")
    outline2.Color = Color3.fromRGB(0, 0, 0)
    outline2.Thickness = 1
    outline2.Parent = horizontal
    
    -- Hide default mouse cursor
    mouse.Icon = "rbxasset://SystemCursors/Blank"
    
    rotation = 0
    print("Crosshair created successfully!")
end

-- Destroy Crosshair Function
local function DestroyCrosshair()
    print("Destroying crosshair...")
    
    if renderConnection then
        renderConnection:Disconnect()
        renderConnection = nil
    end
    
    if screenGui then
        screenGui:Destroy()
        screenGui = nil
        crosshair = nil
    end
    
    -- Restore default cursor
    local player = game.Players.LocalPlayer
    local mouse = player:GetMouse()
    mouse.Icon = ""
end

-- Update Crosshair Function
local function UpdateCrosshair()
    if not CrosshairEnabled then
        DestroyCrosshair()
        return
    end
    
    CreateCrosshair()
    
    -- Start render loop
    if renderConnection then
        renderConnection:Disconnect()
    end
    
    local player = game.Players.LocalPlayer
    local mouse = player:GetMouse()
    
    renderConnection = game:GetService("RunService").RenderStepped:Connect(function(dt)
        if not CrosshairEnabled or not crosshair then
            return
        end
        
        -- Update position to follow mouse
        crosshair.Position = UDim2.new(0, mouse.X, 0, mouse.Y)
        
        -- Spinning animation (2 rotations per second)
        rotation = rotation + (2 * 360 * dt)
        if rotation >= 360 then
            rotation = rotation - 360
        end
        crosshair.Rotation = rotation
    end)
end

-- Add Only Toggle
print("Adding toggle...")

LeftGroupBox:AddToggle('CrosshairEnabled', {
    Text = 'Enable Crosshair',
    Default = false,
    Tooltip = 'Toggle spinning crosshair',
    Callback = function(Value)
        print("Crosshair toggled:", Value)
        CrosshairEnabled = Value
        UpdateCrosshair()
    end
})

print("Crosshair module loaded successfully!")
