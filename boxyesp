--// Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local Debris = game:GetService("Debris")

--// Variables
local LocalPlayer = Players.LocalPlayer
local Camera = workspace.CurrentCamera
local espEnabled = false

--// Settings
local settings = {
    defaultcolor = Color3.fromRGB(255, 0, 0),
    teamcheck = false,
    teamcolor = true
}

--// Cached ESP drawings
local espCache = {}

--// Helper functions
local newVector2, newColor3, newDrawing = Vector2.new, Color3.new, Drawing.new
local tan, rad = math.tan, math.rad
local round = function(...)
    local a = {}
    for i, v in next, table.pack(...) do
        a[i] = math.round(v)
    end
    return unpack(a)
end
local wtvp = function(...)
    local a, b = Camera.WorldToViewportPoint(Camera, ...)
    return newVector2(a.X, a.Y), b, a.Z
end

--// Create ESP for a player
local function createEsp(player)
    if player == LocalPlayer then return end
    if espCache[player] then return end

    local drawings = {}

    drawings.box = newDrawing("Square")
    drawings.box.Thickness = 0.4
    drawings.box.Filled = false
    drawings.box.Color = settings.defaultcolor
    drawings.box.Visible = false
    drawings.box.ZIndex = 2

    drawings.boxoutline = newDrawing("Square")
    drawings.boxoutline.Thickness = 0
    drawings.boxoutline.Filled = false
    drawings.boxoutline.Color = newColor3()
    drawings.boxoutline.Visible = false
    drawings.boxoutline.ZIndex = 1

    espCache[player] = drawings
end

--// Remove ESP for one player
local function removeEsp(player)
    if rawget(espCache, player) then
        for _, drawing in next, espCache[player] do
            drawing:Remove()
        end
        espCache[player] = nil
    end
end

--// Destroy all ESP drawings (cleanup)
local function destroyAllEsp()
    for player, drawings in pairs(espCache) do
        for _, drawing in next, drawings do
            drawing:Remove()
        end
        espCache[player] = nil
    end
    print("[ESP] All ESP boxes destroyed.")
end

--// Update ESP positions
local function updateEsp(player, esp)
    local character = player and player.Character
    if character and character:GetModelCFrame() then
        local cframe = character:GetModelCFrame()
        local position, visible, depth = wtvp(cframe.Position)
        esp.box.Visible = visible
        esp.boxoutline.Visible = visible

        if visible then
            local scaleFactor = 1 / (depth * tan(rad(Camera.FieldOfView / 2)) * 2) * 1000
            local width, height = round(4 * scaleFactor, 5 * scaleFactor)
            local x, y = round(position.X, position.Y)

            esp.box.Size = newVector2(width, height)
            esp.box.Position = newVector2(round(x - width / 2, y - height / 2))
            esp.box.Color = settings.teamcolor and player.TeamColor.Color or settings.defaultcolor

            esp.boxoutline.Size = esp.box.Size
            esp.boxoutline.Position = esp.box.Position
        end
    else
        esp.box.Visible = false
        esp.boxoutline.Visible = false
    end
end

--// Main update loop (runs only when enabled)
RunService:BindToRenderStep("BoxESPUpdate", Enum.RenderPriority.Camera.Value, function()
    if not espEnabled then return end
    for player, drawings in next, espCache do
        if settings.teamcheck and player.Team == LocalPlayer.Team then
            continue
        end
        if drawings and player ~= LocalPlayer then
            updateEsp(player, drawings)
        end
    end
end)

--// Add player ESP when player joins
Players.PlayerAdded:Connect(function(player)
    if espEnabled then
        createEsp(player)
    end
end)

--// Remove player ESP when player leaves
Players.PlayerRemoving:Connect(function(player)
    removeEsp(player)
end)

--// ðŸ§  UI Integration Example
local BoxESPBox = Tabs.Visuals:AddLeftGroupbox('Player Box ESP')

BoxESPBox:AddToggle('espbox', {
    Text = 'Enable Box ESP',
    Default = false,
    Tooltip = 'Toggles the Box ESP visibility',
    Callback = function(Value)
        espEnabled = Value
        if espEnabled then
            -- Create ESP for all players
            for _, player in pairs(Players:GetPlayers()) do
                if player ~= LocalPlayer then
                    createEsp(player)
                end
            end
            print("[ESP] Box ESP enabled.")
        else
            -- Destroy all ESPs
            destroyAllEsp()
        end
    end
})
