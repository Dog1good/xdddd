-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local LocalPlayer = Players.LocalPlayer

-- Default settings
local highlightColor = Color3.fromRGB(0, 0, 255)
local fillTransparency = 0.5
local outlineTransparency = 1

-- Function to create a cham (highlight) effect for a player
local function CreateCham(player)
    local character = player.Character or player.CharacterAdded:Wait()
    if not character:FindFirstChild("HumanoidRootPart") then return end

    local highlight = Instance.new("Highlight")
    highlight.Name = "ChamHighlight"
    highlight.Parent = character
    highlight.Adornee = character
    highlight.FillColor = highlightColor
    highlight.FillTransparency = fillTransparency
    highlight.OutlineTransparency = outlineTransparency

    -- Remove highlight when character leaves
    character:WaitForChild("HumanoidRootPart").AncestryChanged:Connect(function()
        if highlight then highlight:Destroy() end
    end)
end

-- Toggle function
local function ToggleChams(Value)
    _G.chams = Value
    for _, player in pairs(Players:GetPlayers()) do
        if player ~= LocalPlayer and player.Character then
            local highlight = player.Character:FindFirstChild("ChamHighlight")
            if _G.chams then
                if not highlight then
                    CreateCham(player)
                end
            else
                if highlight then
                    highlight:Destroy()
                end
            end
        end
    end
end

-- GUI Toggle
LeftGroupBox:AddToggle('ChamsToggle', {
    Text = 'Chams',
    Default = false,
    Tooltip = 'Toggles cham effect for players',
    Callback = ToggleChams
})

-- Color picker
LeftGroupBox:AddLabel('Cham Color'):AddColorPicker('ChamColorPicker', {
    Default = highlightColor,
    Title = 'Cham Color',
    Callback = function(Value)
        highlightColor = Value
        for _, player in pairs(Players:GetPlayers()) do
            local highlight = player.Character and player.Character:FindFirstChild("ChamHighlight")
            if highlight then
                highlight.FillColor = highlightColor
            end
        end
    end
})

-- Fill transparency slider
LeftGroupBox:AddSlider('ChamFillTrans', {
    Text = 'Fill Transparency',
    Default = fillTransparency * 100, -- Slider uses 0-100
    Min = 0,
    Max = 100,
    Rounding = 1,
    Suffix = '%',
    Callback = function(Value)
        fillTransparency = Value / 100
        for _, player in pairs(Players:GetPlayers()) do
            local highlight = player.Character and player.Character:FindFirstChild("ChamHighlight")
            if highlight then
                highlight.FillTransparency = fillTransparency
            end
        end
    end
})

-- Outline transparency slider
LeftGroupBox:AddSlider('ChamOutlineTrans', {
    Text = 'Outline Transparency',
    Default = outlineTransparency * 100,
    Min = 0,
    Max = 100,
    Rounding = 1,
    Suffix = '%',
    Callback = function(Value)
        outlineTransparency = Value / 100
        for _, player in pairs(Players:GetPlayers()) do
            local highlight = player.Character and player.Character:FindFirstChild("ChamHighlight")
            if highlight then
                highlight.OutlineTransparency = outlineTransparency
            end
        end
    end
})

-- Player join handling
Players.PlayerAdded:Connect(function(player)
    player.CharacterAdded:Connect(function(character)
        if _G.chams and player ~= LocalPlayer then
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
            CreateCham(player)
        end
    end)
end)

-- Player leave handling
Players.PlayerRemoving:Connect(function(player)
    local character = player.Character
    if character then
        local highlight = character:FindFirstChild("ChamHighlight")
        if highlight then
            highlight:Destroy()
        end
    end
end)

-- RunService loop to ensure chams persist
RunService.Heartbeat:Connect(function()
    if _G.chams then
        for _, player in pairs(Players:GetPlayers()) do
            if player ~= LocalPlayer and player.Character and not player.Character:FindFirstChild("ChamHighlight") then
                CreateCham(player)
            end
        end
    end
end)
